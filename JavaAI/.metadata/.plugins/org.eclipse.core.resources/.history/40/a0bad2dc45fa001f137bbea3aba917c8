package ann;

//acts as a view into a parent tensor
//holds no actual data but limits the bounds of a tensor such that
//iteration and tensor operations are limited to a subset of that tensor


//IMPORTANT: SUBTENSORS ARE READ ONLY!
public class SubTensor extends Tensor{
	Tensor parent;
	
	public SubTensor(Shape s, Tensor parent) {
		super(s);
		this.parent = parent;
	}
	
	@Override
	public void init() {
		rank = shape.rank();
		strides = new int[rank];

		//start with the last stride being 1
		strides[0] = 1;

		// compute strides by successive multiplications
		for (int i = 1; i < rank; i++) {
			strides[i] = strides[i - 1] * shape.getDim(i - 1);
		}
		
		//no data init (no data lol)
	}
	
	@Override
	public void randomInit(float skew) {
		return;
	}
	
	
}
